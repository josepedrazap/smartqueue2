<!DOCTYPE html>
<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>QR</title>

        <!-- CSS -->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
    </head>

    <body>
          <div class="row box_1">
              <div class="col-md-12">
                <div class="col-md-12">
                  <h3 class="text_principal font-weight-light" id="texto_1">
                    Escanea el código con tu aplicación SmartQueue o tócalo para imprimir tu ticket ;)
                  </h3>
                </div>

              </div>
              <div class="box_2" id="qr" onclick="pencil()">

              </div>
          </div>
          <audio hidden class="hidden" id="audio" controls>
            <source type="audio/wav" src="/audio/ding.wav">
          </audio>
    </body>
    <footer class="footer">
      <img class="image_footer spin" src="/images/share32.png" />
      <a class="text_footer font-weight-light">
        SmartQueue
      </a>
    </footer>

        <!-- Javascript -->
        <script src="/javascripts/socket.io/socket.io.js"></script>
        <script src="/javascripts/qr_render/jquery.min.js"></script>
        <script src="/javascripts/qr_render/jquery-qrcode-0.14.0.min.js"></script>
        <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

        <script type="text/javascript">
          function print_(p){
            axios({
              url: 'http://localhost:3002?num=' + p,
              method: 'get'
            })
            .then((response => {
              if(response.status === 200){

              }
            }))
          }
          function pencil(){
            var id = '<%=q[0]._id%>';
            axios({
              url: '/run/queue/enqueue?id=' + id + '&pencil=1',
              method: 'get'
            })
            .then((response => {
              if(response.status === 200){

              }
            }))
          }
          function ini(){
            $('#qr').qrcode({
                // render method: 'canvas', 'image' or 'div'
                render: 'canvas',

                // version range somewhere in 1 .. 40
                minVersion: 1,
                maxVersion: 40,

                // error correction level: 'L', 'M', 'Q' or 'H'
                ecLevel: 'M',

                // offset in pixel if drawn onto existing canvas
                left: 0,
                top: 0,

                // size in pixel
                size: 300,

                // code color or image element
                fill: '#000',

                // background color or image element, null for transparent background
                background: null,

                // content
                text: '<%=q[0]._id%>',

                // corner radius relative to module width: 0.0 .. 0.5
                radius: 0.0,

                // quiet zone in modules
                quiet: 0,

                // modes
                // 0: normal
                // 1: label strip
                // 2: label box
                // 3: image strip
                // 4: image box
                mode: 0,

                mSize: 0.1,
                mPosX: 0.5,
                mPosY: 0.5,

                label: '<%=q[0].alias_qr%>',
                fontname: 'Sans-serif',
                fontcolor: '#fff',

                image: null
            });
          }

          $(function (){
            socket = io();
            socket.on('qr<%=q[0]._id%>', function(msg){
              if(msg === 'cancel'){
                document.getElementById("qr").innerHTML="";
                document.getElementById("texto_1").innerHTML="La queue ha sido cancelada por su administrador :(";
                window.open('','_parent','');
                window.close();
                return;
              }
              if(msg[0] == '#' && msg[1] == 'p' && msg[2] == 'r'){
                print_(msg.substring(3));
              }
              if(msg[0] == 'i' && msg[1] == 'd'){
                var audio = document.getElementById("audio");

                $("#qr").fadeOut();

                document.getElementById("qr").innerHTML="";

                $('#qr').qrcode({
                      // render method: 'canvas', 'image' or 'div'
                      render: 'canvas',

                      // version range somewhere in 1 .. 40
                      minVersion: 1,
                      maxVersion: 40,

                      // error correction level: 'L', 'M', 'Q' or 'H'
                      ecLevel: 'L',

                      // offset in pixel if drawn onto existing canvas
                      left: 0,
                      top: 0,

                      // size in pixel
                      size: 300,

                      // code color or image element
                      fill: '#000',

                      // background color or image element, null for transparent background
                      background: '#fff',

                      // content
                      text: msg.substring(2),

                      // corner radius relative to module width: 0.0 .. 0.5
                      radius: 0.0,

                      // quiet zone in modules
                      quiet: 0,

                      // modes
                      // 0: normal
                      // 1: label strip
                      // 2: label box
                      // 3: image strip
                      // 4: image box
                      mode: 0,

                      mSize: 0.1,
                      mPosX: 0.5,
                      mPosY: 0.5,

                      label:  '<%=q[0]._id%>',
                      fontname: 'Sans-serif',
                      fontcolor: '#fff',

                      image: null
                  });
              }
              $("#qr").fadeIn();
              audio.play();


            });
          });
          socket = io();
          socket.onmessage = function(event) {
            var message = event.data;
          };
          window.onload = ini();
        </script>
        <style>

        .text_gigante {
          font-size: 12em;
          color: #fff;
          justify-content: center;
          align-items: center;
          display: flex;
          padding-bottom: 200px
        }
        .text_principal {
          font-size: 1.5em;
          color: #000;
          text-align: center
        }
        .text_footer{
          font-size: 1.5em;
          color: #fff;
          padding-right: 10px;
        }
        .footer {
            position: fixed;
            left: 0;
            bottom: 0;
            height: 40px;
            width: 100%;
            background-color: #000;
            opacity: 0.8;
            color: white;
            text-align: right;
        }
        .box_1 {
          padding-top: 40px;
          background: #fff;
          height: 500px;
          width: 400px;
          margin-left: auto;
          margin-right: auto;
          margin-top: 60px;
          margin-bottom: auto;
          opacity: 0.8;
          border-radius: 10px;
        }
        .box_2 {
          height: 300px;
          width: 300px;
          margin-left: auto;
          margin-right: auto;
          margin-bottom: auto;
        }
        body {
          background: #0F2027;  /* fallback for old browsers */
          background: -webkit-linear-gradient(to right, #2C5364, #203A43, #0F2027);  /* Chrome 10-25, Safari 5.1-6 */
          background: linear-gradient(to right, #2C5364, #203A43, #0F2027); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        }
        .image_footer {
          height: 30px;
          width: 30px;
          margin-bottom: 6px;
        }
        @keyframes spin {
          from { transform: rotate(0deg); }
          to { transform: rotate(360deg); }
        }
        .spin {
          animation: spin infinite 5s linear;
        }

        </style>
    </body>

</html>
